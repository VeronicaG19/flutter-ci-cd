# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- name: proyectDirectory
  value: '.'
- group: keystore
- name: androidKeystorePassword
  value: $[variables.ANDORID_KEYSTORE_PASSWORD]
- name: androidKeyAlias
  value: $[variables.ANDORID_KEYSTORE_ALIAS]
- name: androidKeystorePrivateKeyPassword
  value: $[variables.ANDORID_KEYSTORE_PRIVATE_KEY_PASSWORD] 
- group: firebase 
- name: firebaseToken
  value: $[variables.FIREBASE_TOKEN] 
- name: firebaseAndroidAppId
  value: $[variables.FIREBASE_ANDROID_APP_ID] 

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: FlutterInstall@0
  inputs:
    channel: 'stable'
    version: 'latest'
  displayName: 'Install latet flutter SDK stable version'


- task: FlutterAnalyzeTask@0
  inputs:
    proyectDirectory: '$(projectDirectory)'
    extraArgs: '--fatal-warning'
  displayName: 'Run flutter analyzer'

- task: FlutterTest@0
  inputs:
    generateCodeCoverageReport: true
    proyectDirectory: '$(projectDirectory)'
  displayName: 'Run flutter test'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(projectDirectory)/coverage'
    Contents: 'lcov.info'
    TargetFolder: '$(build.artifactStagingDirectory)'
  displayName: 'Copy code coverage file to artifacts directory'

- script: pip install lcov_cobertura
  displayName: 'Install lcov_cobertura python package'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import argparse
      from lcov_cobertura import LocvCobertura
      parser = argparse.ArgumentParser()
      parser.add_argument('--cov_file_path', '-c', help='Code coverage file path', type= str)
      parser.add_argument('--ouput_dir', '-o', help='Cobertura XML file directory', type= str)  
      args = parser.parse:args()
      coverage_file = open(args.cov_file_path, 'r')
      coverage_file_content = coverage_file.read()
      converter = LcovCobertura(coverage_file_content)
      cobertura_xml_content = converter.convert()
      cobertura_xml_file = open(f'{args.output_dir}/cobertura.xml', 'w')
      cobertura_xml_write(cobertura_xml_content)
      cobertura_xml_file.close()
    arguments: --cov_file_path $(build.artifactStagingDirectory)/lcov.info--output_dir $(build.artifactStagingDirectory)
  displayName: 'Python script - Convert lcov.info cobertura.xml'

- task: PublishCodeCoverageResults@1
  inputs:
   codeCoverageTool: Cobertura
   summaryFileLocation: '$(build.artifactStagingDirectory)/cobertura.xml'
  displayName: 'Publish code coverage results'

- task: FlutterBuild@0
  inputs:
    target: apk
    projectDirectory: $(proyectDirectory)
  displayName: 'Build app'

- task: AndroidSinging@3
  displayName: 'Sing in and aligning apk file'
  inputs:
    apkFiles: '**/*.apk'
    apksign: true
    apksignerKeystoreFile: people-app-upload-keytore.jks
    apksignerKeystorePassword: '$(androidKeystorePassword)'
    apksignerKeystoreAlias: '$(androidKeyAlias)'
    apksignerKeyPassword: '$(androidKeystorePrivateKeyPassword)'

- task: CopyFiles@2
  inputs:
    Contents: '**/*.apk'
    TargetFolder: '$(build.artifactStaingDirectory)'
  displayName: 'Copy app to artifacts directory'

- script: |
    echo 'Installing Firebase CLI....'
    curl -SL https://firebase.tools | bash
    firebase --version
    echo 'Deploying to firebase'
    

